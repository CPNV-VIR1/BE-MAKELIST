@startuml

skinparam classAttributeIconSize 0

'packages
package "Controllers"
{
    class TierListController {
        - repository: TierListRepository
        + TierListController(repository: TierListRepository)
        + all(): List<TierList>
        + newTierList(newTierList: TierList): TierList
        + one(id: Long): TierList
        + updateTierList(newTierList: TierList, id: Long): TierList
        + deleteTierList(id: Long): void
    }
        
    class TierListNotFoundAdvice {
        + TierListNotFoundHandler(ex: TierListNotFoundException): String
    }

    class TierListNotFoundException {
        + TierListNotFoundException(id: Long)
    }

    class TierListItemController {
        - repository: TierListItemRepository
        + TierListItemController(repository: TierListItemRepository)
        + all(TierListId: Long): List<TierListItem>
        + newTierListItem(newTierListItem: TierListItem, TierListId: Long): TierListItem
        + one(id: Long): TierListItem
        + updateTierListItem(newTierListItem: TierListItem, id: Long): TierListItem
        + deleteTierListItem(id: Long): void
    }
        
    class TierListItemNotFoundAdvice {
        + TierListItemNotFoundHandler(ex: TierListItemNotFoundException): String
    }

    class TierListItemNotFoundException {
        + TierListItemNotFoundException(id: Long)
    }
}

package "Entities"
{
    class TierList {
        - id: Long
        - title: String
        + TierList(title: String)
        + <get,set>Id(): Long
        + <get,set>Title(): String
    }

    class TierListItem {
        - id: Long
        - description: String
        - ranking: Short
        - tierListId: Long
        + TierListItem(description: String, tierListId: Long)
        + TierList(description: String, tierList: Long, ranking: Short)
        + <get,set>Id(): Long
        + <get,set>Description(): String
        + <get,set>Ranking(): Short
        + <get,set>TierListId(): Long
    }
}

package "Repositories"
{
    interface TierListRepository{}
    interface TierListItemRepository{}

    class LoadDatabase {
        +initDatabase(repository: TierListRepository): CommandLineRunner
    }
}

'relations
TierListController --> TierList
TierListController --> TierListRepository
TierListController ..> TierListNotFoundException : throws
TierListNotFoundAdvice --> TierListNotFoundException

TierListItemController --> TierListItem
TierListItemController --> TierListItemRepository
TierListItemController ..> TierListItemNotFoundException : throws
TierListItemNotFoundAdvice --> TierListItemNotFoundException

@enduml